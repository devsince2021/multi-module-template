plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'com.epages.restdocs-api-spec' version "${restDocsApiSpecVersion}"
}

dependencies {
    implementation(project(":api"))
    implementation(project(":persistence"))

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${swaggerUiVersion}"

    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"
    testImplementation "com.epages:restdocs-api-spec-mockmvc:${restDocsApiSpecVersion}"
}

openapi3 {
    servers = [
            { url = 'http://localhost:9000' },
    ]
    title = "API Documentation"
    description = "API Documentation"
    version = "1.0.0"
    format = 'json'
    outputDirectory = layout.projectDirectory.dir("src/main/resources/static/docs").asFile
    outputFileNamePrefix = 'openapi'
}

tasks.register('cleanDocs') {
    doFirst {
        delete(layout.projectDirectory.dir("src/main/resources/static/docs"))
        layout.projectDirectory.dir("src/main/resources/static/docs").asFile.mkdirs()
    }
}

tasks.register('OAS3') {
    dependsOn('cleanDocs')
    // 별도의 test가 없어도 이 명령어로 openapi.json 생성 가능
    finalizedBy('openapi3')
}

// ./gradlew clean 실행시 docs파일도 같이 삭제
tasks.named('clean') {
    dependsOn('cleanDocs')
}